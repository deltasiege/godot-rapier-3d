{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "0KnrND3ZX0tIjNc3Sgt-r",
      "type": "text",
      "x": -5046.960206166508,
      "y": 1057.216170644107,
      "width": 935,
      "height": 675,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a7",
      "roundness": null,
      "seed": 437509830,
      "version": 1011,
      "versionNonce": 1826892764,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1743863906028,
      "link": null,
      "locked": false,
      "text": "# GR3D\n    - World\n    - Network\n    - Input\n    - Logger\n\n---\n\n#[func]\nfn spawn( name, parent path, packed scene) -> Gd<spawned node>:\n    NodeDatabase -> create_gruid()\n    spawns the provided packed scene at the parent path and renames to the given name\n    attaches generated GRUID to that node\n\n    then we call WorldDatabase record_spawn and pass in the created node\n\n#[func]\nfn despawn( Gd<RollbackObject> ):\n    NodeDatabase -> record_despawn(Gd<RollbackObject>)\n    queue_free the node\n\n#[func]\nfn _on_physics_process():\n    Network.record_all_advantages()\n\n    Input.record_local_inputs()\n    Network.send_updates_to_all_peers()",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "# GR3D\n    - World\n    - Network\n    - Input\n    - Logger\n\n---\n\n#[func]\nfn spawn( name, parent path, packed scene) -> Gd<spawned node>:\n    NodeDatabase -> create_gruid()\n    spawns the provided packed scene at the parent path and renames to the given name\n    attaches generated GRUID to that node\n\n    then we call WorldDatabase record_spawn and pass in the created node\n\n#[func]\nfn despawn( Gd<RollbackObject> ):\n    NodeDatabase -> record_despawn(Gd<RollbackObject>)\n    queue_free the node\n\n#[func]\nfn _on_physics_process():\n    Network.record_all_advantages()\n\n    Input.record_local_inputs()\n    Network.send_updates_to_all_peers()",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "dbafwYAmKqKi0Xwn6ECsN",
      "type": "text",
      "x": -3583,
      "y": 1565.476190476191,
      "width": 319,
      "height": 350,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "dotted",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aD",
      "roundness": null,
      "seed": 1787765382,
      "version": 715,
      "versionNonce": 81604964,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "G7251bzjKCRHKB7vKHieQ",
          "type": "arrow"
        }
      ],
      "updated": 1743859527574,
      "link": null,
      "locked": false,
      "text": "# RemotePeer\nimpl NetworkPeer\nimpl HasBuffers\n\n- last_ping_received\n- rtt\n- time_delta\n- latest_remote_tick_received\n- latest_local_tick_received\n- remote_lag\n- local_lag\n- calculated_advantage\n- advantage_list\n- requested_local_ticks",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "# RemotePeer\nimpl NetworkPeer\nimpl HasBuffers\n\n- last_ping_received\n- rtt\n- time_delta\n- latest_remote_tick_received\n- latest_local_tick_received\n- remote_lag\n- local_lag\n- calculated_advantage\n- advantage_list\n- requested_local_ticks",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "kyoCrVtRVORVpx08C5qLE",
      "type": "text",
      "x": -3102.1428571428582,
      "y": 2768.5714285714294,
      "width": 319,
      "height": 100,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "dotted",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aG",
      "roundness": null,
      "seed": 967342170,
      "version": 543,
      "versionNonce": 1677634532,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "gI9yDw8f8eIQUNGrt-Elu",
          "type": "arrow"
        }
      ],
      "updated": 1743863964566,
      "link": null,
      "locked": false,
      "text": "UpdateFrame\n    - tick: usize\n    - ser_inputs: Vec<u8>\n    - world_hash: Option<u64>",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "UpdateFrame\n    - tick: usize\n    - ser_inputs: Vec<u8>\n    - world_hash: Option<u64>",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "mqOKQYd0J-48GdrBH8Fs_",
      "type": "text",
      "x": -3372.622804238961,
      "y": 233.25390841422904,
      "width": 308,
      "height": 50,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aJ",
      "roundness": null,
      "seed": 1179561626,
      "version": 237,
      "versionNonce": 1119900900,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "bE_2-cvgcAOrfl22bEutz",
          "type": "arrow"
        }
      ],
      "updated": 1743855378031,
      "link": null,
      "locked": false,
      "text": "# PhysicsState\n    - ...Rapier physics data",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "# PhysicsState\n    - ...Rapier physics data",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "ygb-JHnxFY6YRkuffoLcM",
      "type": "text",
      "x": 33.57142857142799,
      "y": 180.28571428571462,
      "width": 122.11990356445312,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aM",
      "roundness": null,
      "seed": 1526382170,
      "version": 50,
      "versionNonce": 1812654820,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1743859919702,
      "link": null,
      "locked": false,
      "text": "GR3DLogger",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "GR3DLogger",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "RVqSGOG0IaTI_emhTSnZ2",
      "type": "text",
      "x": -98.14285714285757,
      "y": 27.142857142857395,
      "width": 134.2198944091797,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aN",
      "roundness": null,
      "seed": 137377434,
      "version": 55,
      "versionNonce": 1890840164,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1743859919702,
      "link": null,
      "locked": false,
      "text": "GR3DRuntime",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "GR3DRuntime",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "BM84FnDL4TY6FdUWQe7up",
      "type": "text",
      "x": -3685.5238095238096,
      "y": 2739.57142857143,
      "width": 374,
      "height": 100,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aT",
      "roundness": null,
      "seed": 229850169,
      "version": 481,
      "versionNonce": 1562903268,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "gI9yDw8f8eIQUNGrt-Elu",
          "type": "arrow"
        }
      ],
      "updated": 1743863964566,
      "link": null,
      "locked": false,
      "text": "UpdateMessage\n    - creation tick\n    - frames: Vec<UpdateFrame>\n    - requested_frames: Vec<usize>",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "UpdateMessage\n    - creation tick\n    - frames: Vec<UpdateFrame>\n    - requested_frames: Vec<usize>",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "8isWmpkIUFSUzZOokGt6W",
      "type": "text",
      "x": -2594.9682654048547,
      "y": 559.2291511579908,
      "width": 1162.286376953125,
      "height": 1555.5552898548297,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aW",
      "roundness": null,
      "seed": 2140565113,
      "version": 4745,
      "versionNonce": 1036722908,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "b5h4tcFIFf0_RJT9MDpid",
          "type": "arrow"
        }
      ],
      "updated": 1743858772419,
      "link": null,
      "locked": false,
      "text": "# NodeDatabase\n\nStores all data for every object that has existed in the world\n\nAll data is for local use only - nothing is synchronized across the network\n\nData\n---\n\nrapier_handles: HashMap<GRUID, HashMap<tick, Option<Rapier handle>>>\nnode_refs: HashMap<GRUID, HashMap<tick, Option<Gd<smart pointer>>>>\nblueprints: HashMap<GRUID, HashMap<tick, Option<NodeBlueprint>>>\n\nsnapshottable: HashMap<Rapier handle, HashMap<tick, bool>>\n\nRead functions:\n---\n\nfn create_gruid() -> GRUID:\n    Returns a new GRUID based on:\n        - the peer_index from GR3DNet\n        - the next node counter number in sequence\n\nfn get_gruid(Gd<RollbackNode>) -> GRUID:\n    Pulls the given node's GRUID out of its Godot metadata\n\nfn get_blueprint( GRUID, tick ) -> Option<Rollback Object Data>\n    Returns the data used to create the given GRUID object on or before the given tick\n    Returns None if the given GRUID was not alive at the given tick\n\nfn get_rapier_handle( GRUID, tick ) -> Option<Rapier handle>\n    Returns the rapier handle corresponding to the given GRUID at the given tick\n    Returns None if the given GRUID did not have a registered object in Rapier at the given tick\n\nfn get_node( GRUID, tick ) -> Option<Gd smart pointer>\n    Returns the godot smart pointer pointing at the corresponding node of the given GRUID at the given tick\n    Returns None if the given GRUID was not alive at the given tick\n\nfn get_snapshottable( tick ) -> Vec<Rapier handle>\n    Returns a list of rapier handles that are able to be included in a snapshot at the given tick\n    by iterating over every registered Rapier handle inside snapshottable HashMap and checking the\n    given tick value\n\n    Expensive Rapier objects will not be included in this list\n\n    \n    \n\nMutation functions:\n---\n\nfn record_spawn( Gd<RollbackNode>, tick ):\n    pull GRUID off node reference\n    Extract all required data from node reference to recreate the node later (Godot + Rapier)\n    Append to node_refs and blueprints HashMaps at the given tick\n\n    Also check if the constructed Rapier object is a collider with many vertices. If so, add\n    the rapier handle to the is_expensive Hashmap. These colliders will be excluded from snapshots\n    \n\nfn record_despawn( Gd<RollbackNode>, tick ):\n    pull GRUID off node reference\n    Mark node_refs, blueprints and snapshottable as None at the given tick",
      "fontSize": 19.753083045775615,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "# NodeDatabase\n\nStores all data for every object that has existed in the world\n\nAll data is for local use only - nothing is synchronized across the network\n\nData\n---\n\nrapier_handles: HashMap<GRUID, HashMap<tick, Option<Rapier handle>>>\nnode_refs: HashMap<GRUID, HashMap<tick, Option<Gd<smart pointer>>>>\nblueprints: HashMap<GRUID, HashMap<tick, Option<NodeBlueprint>>>\n\nsnapshottable: HashMap<Rapier handle, HashMap<tick, bool>>\n\nRead functions:\n---\n\nfn create_gruid() -> GRUID:\n    Returns a new GRUID based on:\n        - the peer_index from GR3DNet\n        - the next node counter number in sequence\n\nfn get_gruid(Gd<RollbackNode>) -> GRUID:\n    Pulls the given node's GRUID out of its Godot metadata\n\nfn get_blueprint( GRUID, tick ) -> Option<Rollback Object Data>\n    Returns the data used to create the given GRUID object on or before the given tick\n    Returns None if the given GRUID was not alive at the given tick\n\nfn get_rapier_handle( GRUID, tick ) -> Option<Rapier handle>\n    Returns the rapier handle corresponding to the given GRUID at the given tick\n    Returns None if the given GRUID did not have a registered object in Rapier at the given tick\n\nfn get_node( GRUID, tick ) -> Option<Gd smart pointer>\n    Returns the godot smart pointer pointing at the corresponding node of the given GRUID at the given tick\n    Returns None if the given GRUID was not alive at the given tick\n\nfn get_snapshottable( tick ) -> Vec<Rapier handle>\n    Returns a list of rapier handles that are able to be included in a snapshot at the given tick\n    by iterating over every registered Rapier handle inside snapshottable HashMap and checking the\n    given tick value\n\n    Expensive Rapier objects will not be included in this list\n\n    \n    \n\nMutation functions:\n---\n\nfn record_spawn( Gd<RollbackNode>, tick ):\n    pull GRUID off node reference\n    Extract all required data from node reference to recreate the node later (Godot + Rapier)\n    Append to node_refs and blueprints HashMaps at the given tick\n\n    Also check if the constructed Rapier object is a collider with many vertices. If so, add\n    the rapier handle to the is_expensive Hashmap. These colliders will be excluded from snapshots\n    \n\nfn record_despawn( Gd<RollbackNode>, tick ):\n    pull GRUID off node reference\n    Mark node_refs, blueprints and snapshottable as None at the given tick",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "EGvUwG4lzsEDz_b29kBOX",
      "type": "text",
      "x": -1123.4761904761906,
      "y": 533.5238095238095,
      "width": 726,
      "height": 450,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aX",
      "roundness": null,
      "seed": 152322012,
      "version": 752,
      "versionNonce": 68180188,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "ctUo8Sl3Vje-AuQR7gN4w",
          "type": "arrow"
        }
      ],
      "updated": 1743858801028,
      "link": null,
      "locked": false,
      "text": "# NodeBlueprint\n\nContains all data required to create the object in Godot or Rapier\n\nBoth related:\n    - Node class (Area / Rigidbody / Collider / Character etc.)\n    - Isometry\n    - Children GRUIDs (optional)\n    - Parent GRUID (optional)\n\nGodot related:\n    - Node name: String\n    - Parent path: String\n    - Resource path of spawned scene: String\n\nRapier related:\n    - RapierBuilder: Enum\n",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "# NodeBlueprint\n\nContains all data required to create the object in Godot or Rapier\n\nBoth related:\n    - Node class (Area / Rigidbody / Collider / Character etc.)\n    - Isometry\n    - Children GRUIDs (optional)\n    - Parent GRUID (optional)\n\nGodot related:\n    - Node name: String\n    - Parent path: String\n    - Resource path of spawned scene: String\n\nRapier related:\n    - RapierBuilder: Enum\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "ctUo8Sl3Vje-AuQR7gN4w",
      "type": "arrow",
      "x": -1887.0799143416373,
      "y": 838.3483803692387,
      "width": 746.9370571987799,
      "height": 99.13447184960557,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aa",
      "roundness": null,
      "seed": 3894876,
      "version": 816,
      "versionNonce": 717806940,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743858801028,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          746.9370571987799,
          -99.13447184960557
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": {
        "elementId": "EGvUwG4lzsEDz_b29kBOX",
        "focus": 0.25514427615476526,
        "gap": 16.666666666666742
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": false,
      "fixedSegments": null,
      "startIsSpecial": null,
      "endIsSpecial": null
    },
    {
      "id": "HZ3S0HtYIgwRCNOvgUkU0",
      "type": "text",
      "x": -2356.0865542115303,
      "y": -881.1082182890564,
      "width": 730,
      "height": 325,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ac",
      "roundness": null,
      "seed": 1737176036,
      "version": 368,
      "versionNonce": 425918172,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743858814006,
      "link": null,
      "locked": false,
      "text": "Rollback Manager\n\n\n\n\nfn spawn_missing_nodes():\n    Should be called at the end of rollbacks.\n    Examine all Rigidbodies + Colliders in the Rapier physics state,\n    check if they have matching entries in NodeDatabase -> node_refs\n\n    If not, use the NodeDatabase -> blueprint to spawn the node in\n    Godot only. The AddNode action that would normally be added from\n    entering the tree should be suppressed",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Rollback Manager\n\n\n\n\nfn spawn_missing_nodes():\n    Should be called at the end of rollbacks.\n    Examine all Rigidbodies + Colliders in the Rapier physics state,\n    check if they have matching entries in NodeDatabase -> node_refs\n\n    If not, use the NodeDatabase -> blueprint to spawn the node in\n    Godot only. The AddNode action that would normally be added from\n    entering the tree should be suppressed",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "RHHw7i-_1tr5ylOANgR1w",
      "type": "text",
      "x": 583.0353440986746,
      "y": -769.196727450531,
      "width": 698.1893304555606,
      "height": 150,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ae",
      "roundness": null,
      "seed": 528104796,
      "version": 285,
      "versionNonce": 651675996,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743847744933,
      "link": null,
      "locked": false,
      "text": "# Network Cache\n\nUser defined strings that can be sent over the network as\nintegers instead of the full String to save on packet size\n\nRelevant String fields in packets",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "# Network Cache\n\nUser defined strings that can be sent over the network as integers instead of the full String to save on packet size\n\nRelevant String fields in packets",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "IGQ1dXn-__gji5gDR6z4X",
      "type": "text",
      "x": -318.8865547035873,
      "y": 1105.6819969796568,
      "width": 341,
      "height": 150,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ak",
      "roundness": null,
      "seed": 287008220,
      "version": 299,
      "versionNonce": 632083292,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "254_NncKnNR6ZMZEsUx4U",
          "type": "arrow"
        }
      ],
      "updated": 1743856221876,
      "link": null,
      "locked": false,
      "text": "# RapierBuilder enum {\n    Rigidbody(RigidBodyBuilder)\n    Collider(ColliderBuilder)\n}\n\n",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "# RapierBuilder enum {\n    Rigidbody(RigidBodyBuilder)\n    Collider(ColliderBuilder)\n}\n\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "254_NncKnNR6ZMZEsUx4U",
      "type": "arrow",
      "x": -824.6352094908993,
      "y": 950.7360294515415,
      "width": 496.1844173838115,
      "height": 172.8490969098441,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "al",
      "roundness": null,
      "seed": 519699676,
      "version": 237,
      "versionNonce": 311590372,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743858787323,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          496.1844173838115,
          172.8490969098441
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": {
        "elementId": "IGQ1dXn-__gji5gDR6z4X",
        "focus": -0.04188918043021432,
        "gap": 9.564237403500556
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": false
    },
    {
      "id": "rFbfsdTnLbEZQ3D4_NFIo",
      "type": "text",
      "x": -4107.939804404042,
      "y": 389.75372420570307,
      "width": 759,
      "height": 575,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ap",
      "roundness": null,
      "seed": 805002468,
      "version": 936,
      "versionNonce": 182161124,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "tv3MxWbI9sG1V6AJNb3Gm",
          "type": "arrow"
        }
      ],
      "updated": 1743858727308,
      "link": null,
      "locked": false,
      "text": "# World\n\nRapier world\n\n- time: TimeState\n- physics: PhysicsState\n- node_db: NodeDatabase\n- debugger: DebugVisualizer\n\n---\n\n#[func]\nfn set_tick_interval( delta_time ):\n    IntegrationParameters.dt = delta_time\n\n#[func]\nfn save_snapshot() -> PackedByteArray:\n    Return the current World physics state as a serialized byte array\n\n#[func]\nfn restore_snapshot( snapshot: PackedByteArray ):\n    Set the current World physics state to the given byte array\n",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "# World\n\nRapier world\n\n- time: TimeState\n- physics: PhysicsState\n- node_db: NodeDatabase\n- debugger: DebugVisualizer\n\n---\n\n#[func]\nfn set_tick_interval( delta_time ):\n    IntegrationParameters.dt = delta_time\n\n#[func]\nfn save_snapshot() -> PackedByteArray:\n    Return the current World physics state as a serialized byte array\n\n#[func]\nfn restore_snapshot( snapshot: PackedByteArray ):\n    Set the current World physics state to the given byte array\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "tv3MxWbI9sG1V6AJNb3Gm",
      "type": "arrow",
      "x": -4907.932260820476,
      "y": 1089.7336215499602,
      "width": 774.7109929863655,
      "height": 657.2787649687757,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aq",
      "roundness": null,
      "seed": 154257244,
      "version": 1406,
      "versionNonce": 902828644,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743858727308,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          774.7109929863655,
          -657.2787649687757
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": {
        "elementId": "rFbfsdTnLbEZQ3D4_NFIo",
        "focus": 0.9651308159979457,
        "gap": 25.28146343006938
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": false
    },
    {
      "id": "ChI489YZHjtIeHi-tEL76",
      "type": "arrow",
      "x": -4885.742553661845,
      "y": 1118.9139833258896,
      "width": 1122.41985099753,
      "height": 48.77194486048302,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "as",
      "roundness": null,
      "seed": 1418525020,
      "version": 930,
      "versionNonce": 2048714596,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743860389218,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          1122.41985099753,
          48.77194486048302
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": {
        "elementId": "Z3CtXKyAyZYUDWkKPwS19",
        "focus": 0.6603537242895918,
        "gap": 17.127004026174745
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": false
    },
    {
      "id": "b5h4tcFIFf0_RJT9MDpid",
      "type": "arrow",
      "x": -3791.005222447669,
      "y": 574.5554302680503,
      "width": 1172.6666666666665,
      "height": 3.8175508771925024,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "at",
      "roundness": null,
      "seed": 939117148,
      "version": 164,
      "versionNonce": 1839011676,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743860038674,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          1172.6666666666665,
          3.8175508771925024
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": {
        "elementId": "8isWmpkIUFSUzZOokGt6W",
        "focus": 0.9704956159317343,
        "gap": 23.37029037614775
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": false
    },
    {
      "id": "Z3CtXKyAyZYUDWkKPwS19",
      "type": "text",
      "x": -3746.1956986381397,
      "y": 1145.0792397918603,
      "width": 765.0000000000005,
      "height": 300,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "au",
      "roundness": null,
      "seed": 1985981668,
      "version": 266,
      "versionNonce": 626983908,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "ChI489YZHjtIeHi-tEL76",
          "type": "arrow"
        }
      ],
      "updated": 1743860389218,
      "link": null,
      "locked": false,
      "text": "# Network\n\nAll network sync related logic and peer management\n\n- started: bool\n- host_starting: bool\n- local_peer: LocalPeer\n- peers: Vec<RemotePeer>\n\n\n\n",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "# Network\n\nAll network sync related logic and peer management\n\n- started: bool\n- host_starting: bool\n- local_peer: LocalPeer\n- peers: Vec<RemotePeer>\n\n\n\n",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "bE_2-cvgcAOrfl22bEutz",
      "type": "arrow",
      "x": -3838.529031971475,
      "y": 519.2459064585271,
      "width": 458,
      "height": 251.2970215740529,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "av",
      "roundness": null,
      "seed": 642202212,
      "version": 60,
      "versionNonce": 1630279780,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743855378032,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          458,
          -251.2970215740529
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": {
        "elementId": "mqOKQYd0J-48GdrBH8Fs_",
        "focus": 0.7227605292533373,
        "gap": 7.906227732513798
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": false
    },
    {
      "id": "G0iDdaRPQaYMYFr7lzdtr",
      "type": "text",
      "x": -3672.529031971475,
      "y": 37.24590645852709,
      "width": 176,
      "height": 75,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aw",
      "roundness": null,
      "seed": 413609316,
      "version": 72,
      "versionNonce": 1639086308,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "--k3qu3MxdeOXLMIs_Mx0",
          "type": "arrow"
        }
      ],
      "updated": 1743855373943,
      "link": null,
      "locked": false,
      "text": "# TimeState\n- tick\n- secs (seconds)",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "# TimeState\n- tick\n- secs (seconds)",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "--k3qu3MxdeOXLMIs_Mx0",
      "type": "arrow",
      "x": -3914.529031971475,
      "y": 497.2459064585271,
      "width": 246,
      "height": 382,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ax",
      "roundness": null,
      "seed": 1915445348,
      "version": 12,
      "versionNonce": 1219020132,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743855373943,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          246,
          -382
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": {
        "elementId": "G0iDdaRPQaYMYFr7lzdtr",
        "focus": 0.5164445274386673,
        "gap": 3
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": false
    },
    {
      "id": "4s2WL040MzeKMIqVEQmi3",
      "type": "text",
      "x": -3665.909984352426,
      "y": 2065.293525506146,
      "width": 682,
      "height": 350,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ay",
      "roundness": null,
      "seed": 313908708,
      "version": 732,
      "versionNonce": 1725021148,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743863947450,
      "link": null,
      "locked": false,
      "text": "# HasBuffers trait\n\nApplies to LocalPeer + RemotePeer\n\nAllows storage of historic data relevant for network sync\n\n- world_hash_buffer: HashMap<tick, u64>\n\n- input_buffer: HashMap<tick, HashMap<input key, input value>>\n- ser_input_buffer: HashMap<tick, Vec<u8>>\n- input_hash_buffer: HashMap<tick, u64>>\n\n\n(comparison and get/set methods for any buffer go here)",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "# HasBuffers trait\n\nApplies to LocalPeer + RemotePeer\n\nAllows storage of historic data relevant for network sync\n\n- world_hash_buffer: HashMap<tick, u64>\n\n- input_buffer: HashMap<tick, HashMap<input key, input value>>\n- ser_input_buffer: HashMap<tick, Vec<u8>>\n- input_hash_buffer: HashMap<tick, u64>>\n\n\n(comparison and get/set methods for any buffer go here)",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "G7251bzjKCRHKB7vKHieQ",
      "type": "arrow",
      "x": -3475.671889114332,
      "y": 1357.245906458527,
      "width": 61.98548646429617,
      "height": 191.5583949033321,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "az",
      "roundness": null,
      "seed": 1888085468,
      "version": 404,
      "versionNonce": 1954112740,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743859527575,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          -61.98548646429617,
          191.5583949033321
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": {
        "elementId": "dbafwYAmKqKi0Xwn6ECsN",
        "focus": -0.8151653162984617,
        "gap": 16.671889114331634
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": false
    },
    {
      "id": "gI9yDw8f8eIQUNGrt-Elu",
      "type": "arrow",
      "x": -3300.7671272095704,
      "y": 2805.7338923635057,
      "width": 194.571428571428,
      "height": 2.1911316924656603,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b00",
      "roundness": null,
      "seed": 663278436,
      "version": 407,
      "versionNonce": 1930002268,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743863964699,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          194.571428571428,
          -2.1911316924656603
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "BM84FnDL4TY6FdUWQe7up",
        "focus": 0.3529250461926699,
        "gap": 10.756682314239242
      },
      "endBinding": {
        "elementId": "kyoCrVtRVORVpx08C5qLE",
        "focus": 0.3257091341069764,
        "gap": 4.052841495284156
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": false
    },
    {
      "id": "va7eF7APr4EDbojsT3vxm",
      "type": "text",
      "x": -4755.052841495285,
      "y": 3339.769715982336,
      "width": 1012,
      "height": 450,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b03",
      "roundness": null,
      "seed": 622932964,
      "version": 1491,
      "versionNonce": 626659940,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743863961520,
      "link": null,
      "locked": false,
      "text": "# Networked Input Actions\n\nUser-defined list of actions that will be synced over the network\n\nEvery physics frame, all given input action states are stored in World/Peer::buffers\n\nAt any time in gr3d_process of a GDScript:\n\n1. Character A on Peer A calls GR3D.is_action_pressed(\"jump\", self)\n    1. check the authority of the node we are calling from (self)\n    2. If we are the authority of the calling node, return World::buffer::input_buffer value\n\n\nDuring a rollback, we would need to re-execute the GDScript.. \nhmm we need to provide a network_process method like GRN does - use virtual functions\n\n\nRust can check all defined actions every network process and store them in the buffer",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "# Networked Input Actions\n\nUser-defined list of actions that will be synced over the network\n\nEvery physics frame, all given input action states are stored in World/Peer::buffers\n\nAt any time in gr3d_process of a GDScript:\n\n1. Character A on Peer A calls GR3D.is_action_pressed(\"jump\", self)\n    1. check the authority of the node we are calling from (self)\n    2. If we are the authority of the calling node, return World::buffer::input_buffer value\n\n\nDuring a rollback, we would need to re-execute the GDScript.. \nhmm we need to provide a network_process method like GRN does - use virtual functions\n\n\nRust can check all defined actions every network process and store them in the buffer",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "Zm19hJJXuAgbsvImCCu3c",
      "type": "text",
      "x": -3166.8861748286063,
      "y": 1517.674477887099,
      "width": 418,
      "height": 150,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "dotted",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b05",
      "roundness": null,
      "seed": 1448044516,
      "version": 552,
      "versionNonce": 1104114908,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "74lQIChlcO49oPmWYctSp",
          "type": "arrow"
        }
      ],
      "updated": 1743859713818,
      "link": null,
      "locked": false,
      "text": "# LocalPeer\nimpl NetworkPeer\nimpl HasBuffers\n\n- world_buffer: HashMap<tick, Vec<u8>>\n",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "# LocalPeer\nimpl NetworkPeer\nimpl HasBuffers\n\n- world_buffer: HashMap<tick, Vec<u8>>\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "74lQIChlcO49oPmWYctSp",
      "type": "arrow",
      "x": -3474.3861748286076,
      "y": 1333.3887636013847,
      "width": 293.94927649577994,
      "height": 175.51291017864855,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b06",
      "roundness": null,
      "seed": 356069212,
      "version": 173,
      "versionNonce": 1981789660,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743859717907,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          293.94927649577994,
          175.51291017864855
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": {
        "elementId": "Zm19hJJXuAgbsvImCCu3c",
        "focus": -0.24580222636456853,
        "gap": 16.142620586162927
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": false
    },
    {
      "id": "_jpNZcTZJOx1Yvo7ELg_Z",
      "type": "text",
      "x": -3101.552841495272,
      "y": 1723.00781122043,
      "width": 292.1535800760975,
      "height": 101.4285714285712,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b09",
      "roundness": null,
      "seed": 238959708,
      "version": 271,
      "versionNonce": 729098204,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743859581858,
      "link": null,
      "locked": false,
      "text": "# NetworkPeer trait\n\n- peer_id: Option<i64>\n- is_spectator: bool",
      "fontSize": 20.28571428571424,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "# NetworkPeer trait\n\n- peer_id: Option<i64>\n- is_spectator: bool",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "owMzboKN-SNFQahKMr3BG",
      "type": "text",
      "x": -5396.552841495272,
      "y": 2233.1982874109094,
      "width": 975,
      "height": 250,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0A",
      "roundness": null,
      "seed": 1228884836,
      "version": 365,
      "versionNonce": 1132825828,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743863937516,
      "link": null,
      "locked": false,
      "text": "# GR3DRuntime (GDScript)\n\nRuns in-editor and at game runtime\nResponsible for anything that requires access to the Godot scene tree\n(GR3D cannot access the scene tree)\n\n---\n\nfn physics_process():\n    call GR3D._on_physics_process()",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "# GR3DRuntime (GDScript)\n\nRuns in-editor and at game runtime\nResponsible for anything that requires access to the Godot scene tree\n(GR3D cannot access the scene tree)\n\n---\n\nfn physics_process():\n    call GR3D._on_physics_process()",
      "autoResize": false,
      "lineHeight": 1.25
    }
  ],
  "appState": {
    "gridSize": 20,
    "gridStep": 5,
    "gridModeEnabled": false,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}